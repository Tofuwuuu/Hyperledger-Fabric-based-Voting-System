#!/bin/bash

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com



  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org1.example.com/



  set -x  set -x

  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca_auditor --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-org1 --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  echo 'NodeOUs:  echo 'NodeOUs:

  Enable: true  Enable: true

  ClientOUIdentifier:  ClientOUIdentifier:

    Certificate: cacerts/localhost-7054-ca-auditor.pem    Certificate: cacerts/localhost-7054-ca-org1.pem

    OrganizationalUnitIdentifier: client    OrganizationalUnitIdentifier: client

  PeerOUIdentifier:  PeerOUIdentifier:

    Certificate: cacerts/localhost-7054-ca-auditor.pem    Certificate: cacerts/localhost-7054-ca-org1.pem

    OrganizationalUnitIdentifier: peer    OrganizationalUnitIdentifier: peer

  AdminOUIdentifier:  AdminOUIdentifier:

    Certificate: cacerts/localhost-7054-ca-auditor.pem    Certificate: cacerts/localhost-7054-ca-org1.pem

    OrganizationalUnitIdentifier: admin    OrganizationalUnitIdentifier: admin

  OrdererOUIdentifier:  OrdererOUIdentifier:

    Certificate: cacerts/localhost-7054-ca-auditor.pem    Certificate: cacerts/localhost-7054-ca-org1.pem

    OrganizationalUnitIdentifier: orderer' > ${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml"



  echo "Registering orderer"  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  set -x

  fabric-ca-client register --caname ca_auditor --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)

  { set +x; } 2>/dev/null  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts"

  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt"

  echo "Registering the orderer admin"

  set -x  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)

  fabric-ca-client register --caname ca_auditor --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/tlsca"

  { set +x; } 2>/dev/null  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem"



  mkdir -p organizations/ordererOrganizations/example.com/orderers  # Copy org1's CA cert to org1's /ca directory (for use by clients)

  mkdir -p organizations/ordererOrganizations/example.com/orderers/example.com  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/ca"

  mkdir -p organizations/ordererOrganizations/example.com/orderers/orderer.example.com  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem"



  echo "Generating the orderer msp"  infoln "Registering peer0"

  set -x  set -x

  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client register --caname ca-org1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  cp ${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml  infoln "Registering user"

  set -x

  echo "Generating the orderer-tls certificates"  fabric-ca-client register --caname ca-org1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  set -x  { set +x; } 2>/dev/null

  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem

  { set +x; } 2>/dev/null  infoln "Registering the org admin"

  set -x

  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt  fabric-ca-client register --caname ca-org1 --id.name org1admin --id.secret org1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key

  infoln "Generating the peer0 msp"

  mkdir -p ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts  set -x

  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  { set +x; } 2>/dev/null

  mkdir -p ${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts

  cp ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml"



  echo "Generating the admin msp"  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"

  set -x  set -x

  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org1.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  cp ${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml ${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config

}  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"

  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt"

function createElectionCommission() {  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key"

  echo "Enrolling the CA admin"

  mkdir -p organizations/peerOrganizations/electioncommission.example.com/  infoln "Generating the user msp"

  set -x

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/electioncommission.example.com/  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  { set +x; } 2>/dev/null

  set -x

  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca_electioncommission --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/config.yaml"

  { set +x; } 2>/dev/null

  infoln "Generating the org admin msp"

  echo 'NodeOUs:  set -x

  Enable: true  fabric-ca-client enroll -u https://org1admin:org1adminpw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"

  ClientOUIdentifier:  { set +x; } 2>/dev/null

    Certificate: cacerts/localhost-8054-ca-electioncommission.pem

    OrganizationalUnitIdentifier: client  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml"

  PeerOUIdentifier:}

    Certificate: cacerts/localhost-8054-ca-electioncommission.pem

    OrganizationalUnitIdentifier: peerfunction createOrg2() {

  AdminOUIdentifier:  infoln "Enrolling the CA admin"

    Certificate: cacerts/localhost-8054-ca-electioncommission.pem  mkdir -p organizations/peerOrganizations/org2.example.com/

    OrganizationalUnitIdentifier: admin

  OrdererOUIdentifier:  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org2.example.com/

    Certificate: cacerts/localhost-8054-ca-electioncommission.pem

    OrganizationalUnitIdentifier: orderer' > ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/config.yaml  set -x

  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-org2 --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  echo "Registering peer0"  { set +x; } 2>/dev/null

  set -x

  fabric-ca-client register --caname ca_electioncommission --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem  echo 'NodeOUs:

  { set +x; } 2>/dev/null  Enable: true

  ClientOUIdentifier:

  echo "Registering user"    Certificate: cacerts/localhost-8054-ca-org2.pem

  set -x    OrganizationalUnitIdentifier: client

  fabric-ca-client register --caname ca_electioncommission --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem  PeerOUIdentifier:

  { set +x; } 2>/dev/null    Certificate: cacerts/localhost-8054-ca-org2.pem

    OrganizationalUnitIdentifier: peer

  echo "Registering the org admin"  AdminOUIdentifier:

  set -x    Certificate: cacerts/localhost-8054-ca-org2.pem

  fabric-ca-client register --caname ca_electioncommission --id.name electioncommissionAdmin --id.secret electioncommissionAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem    OrganizationalUnitIdentifier: admin

  { set +x; } 2>/dev/null  OrdererOUIdentifier:

    Certificate: cacerts/localhost-8054-ca-org2.pem

  mkdir -p organizations/peerOrganizations/electioncommission.example.com/peers    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml"

  mkdir -p organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  echo "Generating the peer0 msp"

  set -x  # Copy org2's CA cert to org2's /msp/tlscacerts directory (for use in the channel MSP definition)

  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca_electioncommission -M ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/msp --csr.hosts peer0.electioncommission.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts"

  { set +x; } 2>/dev/null  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts/ca.crt"



  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/msp/config.yaml  # Copy org2's CA cert to org2's /tlsca directory (for use by clients)

  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/tlsca"

  echo "Generating the peer0-tls certificates"  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem"

  set -x

  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca_electioncommission -M ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls --enrollment.profile tls --csr.hosts peer0.electioncommission.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem  # Copy org2's CA cert to org2's /ca directory (for use by clients)

  { set +x; } 2>/dev/null  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/ca"

  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/ca/ca.org2.example.com-cert.pem"

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/ca.crt

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/server.crt  infoln "Registering peer0"

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/server.key  set -x

  fabric-ca-client register --caname ca-org2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  mkdir -p ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/tlscacerts  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/tlscacerts/ca.crt

  infoln "Registering user"

  mkdir -p ${PWD}/organizations/peerOrganizations/electioncommission.example.com/tlsca  set -x

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/tlsca/tlsca.electioncommission.example.com-cert.pem  fabric-ca-client register --caname ca-org2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  { set +x; } 2>/dev/null

  mkdir -p ${PWD}/organizations/peerOrganizations/electioncommission.example.com/ca

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/peers/peer0.electioncommission.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/electioncommission.example.com/ca/ca.electioncommission.example.com-cert.pem  infoln "Registering the org admin"

  set -x

  echo "Generating the user msp"  fabric-ca-client register --caname ca-org2 --id.name org2admin --id.secret org2adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  set -x  { set +x; } 2>/dev/null

  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca_electioncommission -M ${PWD}/organizations/peerOrganizations/electioncommission.example.com/users/User1@electioncommission.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem

  { set +x; } 2>/dev/null  infoln "Generating the peer0 msp"

  set -x

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/electioncommission.example.com/users/User1@electioncommission.example.com/msp/config.yaml  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  { set +x; } 2>/dev/null

  echo "Generating the org admin msp"

  set -x  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/config.yaml"

  fabric-ca-client enroll -u https://electioncommissionAdmin:electioncommissionAdminpw@localhost:8054 --caname ca_electioncommission -M ${PWD}/organizations/peerOrganizations/electioncommission.example.com/users/Admin@electioncommission.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_electioncommission/tls-cert.pem

  { set +x; } 2>/dev/null  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"

  set -x

  cp ${PWD}/organizations/peerOrganizations/electioncommission.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/electioncommission.example.com/users/Admin@electioncommission.example.com/msp/config.yaml  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org2.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

}  { set +x; } 2>/dev/null



function createAuditor() {  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config

  echo "Enrolling the CA admin"  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt"

  mkdir -p organizations/peerOrganizations/auditor.example.com/  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt"

  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key"

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/auditor.example.com/

  infoln "Generating the user msp"

  set -x  set -x

  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca_auditor --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  echo 'NodeOUs:  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/config.yaml"

  Enable: true

  ClientOUIdentifier:  infoln "Generating the org admin msp"

    Certificate: cacerts/localhost-7054-ca-auditor.pem  set -x

    OrganizationalUnitIdentifier: client  fabric-ca-client enroll -u https://org2admin:org2adminpw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"

  PeerOUIdentifier:  { set +x; } 2>/dev/null

    Certificate: cacerts/localhost-7054-ca-auditor.pem

    OrganizationalUnitIdentifier: peer  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml"

  AdminOUIdentifier:}

    Certificate: cacerts/localhost-7054-ca-auditor.pem

    OrganizationalUnitIdentifier: adminfunction createOrderer() {

  OrdererOUIdentifier:  infoln "Enrolling the CA admin"

    Certificate: cacerts/localhost-7054-ca-auditor.pem  mkdir -p organizations/ordererOrganizations/example.com

    OrganizationalUnitIdentifier: orderer' > ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/config.yaml

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  echo "Registering peer0"

  set -x  set -x

  fabric-ca-client register --caname ca_auditor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  echo "Registering user"  echo 'NodeOUs:

  set -x  Enable: true

  fabric-ca-client register --caname ca_auditor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  ClientOUIdentifier:

  { set +x; } 2>/dev/null    Certificate: cacerts/localhost-9054-ca-orderer.pem

    OrganizationalUnitIdentifier: client

  echo "Registering the org admin"  PeerOUIdentifier:

  set -x    Certificate: cacerts/localhost-9054-ca-orderer.pem

  fabric-ca-client register --caname ca_auditor --id.name auditorAdmin --id.secret auditorAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem    OrganizationalUnitIdentifier: peer

  { set +x; } 2>/dev/null  AdminOUIdentifier:

    Certificate: cacerts/localhost-9054-ca-orderer.pem

  mkdir -p organizations/peerOrganizations/auditor.example.com/peers    OrganizationalUnitIdentifier: admin

  mkdir -p organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com  OrdererOUIdentifier:

    Certificate: cacerts/localhost-9054-ca-orderer.pem

  echo "Generating the peer0 msp"    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"

  set -x

  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/msp --csr.hosts peer0.auditor.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  { set +x; } 2>/dev/null

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/msp/config.yaml  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"

  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  echo "Generating the peer0-tls certificates"

  set -x  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)

  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls --enrollment.profile tls --csr.hosts peer0.auditor.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"

  { set +x; } 2>/dev/null  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"



  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/ca.crt# Loop through each orderer (orderer, orderer2, orderer3, orderer4) to register and generate artifacts

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/server.crt  for ORDERER in orderer orderer2 orderer3 orderer4; do

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/server.key    infoln "Registering ${ORDERER}"

    set -x

  mkdir -p ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/tlscacerts    fabric-ca-client register --caname ca-orderer --id.name ${ORDERER} --id.secret ${ORDERER}pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/tlscacerts/ca.crt    { set +x; } 2>/dev/null



  mkdir -p ${PWD}/organizations/peerOrganizations/auditor.example.com/tlsca    infoln "Generating the ${ORDERER} MSP"

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/auditor.example.com/tlsca/tlsca.auditor.example.com-cert.pem    set -x

    fabric-ca-client enroll -u https://${ORDERER}:${ORDERER}pw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  mkdir -p ${PWD}/organizations/peerOrganizations/auditor.example.com/ca    { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/peers/peer0.auditor.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/auditor.example.com/ca/ca.auditor.example.com-cert.pem

    cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp/config.yaml"

  echo "Generating the user msp"

  set -x    # Workaround: Rename the signcert file to ensure consistency with Cryptogen generated artifacts

  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/auditor.example.com/users/User1@auditor.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem    mv "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp/signcerts/cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp/signcerts/${ORDERER}.example.com-cert.pem"

  { set +x; } 2>/dev/null

    infoln "Generating the ${ORDERER} TLS certificates, use --csr.hosts to specify Subject Alternative Names"

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/auditor.example.com/users/User1@auditor.example.com/msp/config.yaml    set -x

    fabric-ca-client enroll -u https://${ORDERER}:${ORDERER}pw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls" --enrollment.profile tls --csr.hosts ${ORDERER}.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  echo "Generating the org admin msp"    { set +x; } 2>/dev/null

  set -x

  fabric-ca-client enroll -u https://auditorAdmin:auditorAdminpw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/auditor.example.com/users/Admin@auditor.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem    # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config

  { set +x; } 2>/dev/null    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/ca.crt"

    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/server.crt"

  cp ${PWD}/organizations/peerOrganizations/auditor.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/auditor.example.com/users/Admin@auditor.example.com/msp/config.yaml    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/server.key"

}

    # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)

function createVoter() {    mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp/tlscacerts"

  echo "Enrolling the CA admin"    cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/${ORDERER}.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  mkdir -p organizations/peerOrganizations/voter.example.com/  done



  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/voter.example.com/  # Register and generate artifacts for the orderer admin

  infoln "Registering the orderer admin"

  set -x  set -x

  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca_auditor --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  { set +x; } 2>/dev/null  { set +x; } 2>/dev/null



  echo 'NodeOUs:  infoln "Generating the admin msp"

  Enable: true  set -x

  ClientOUIdentifier:  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

    Certificate: cacerts/localhost-7054-ca-auditor.pem  { set +x; } 2>/dev/null

    OrganizationalUnitIdentifier: client

  PeerOUIdentifier:  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"

    Certificate: cacerts/localhost-7054-ca-auditor.pem}

    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-auditor.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-auditor.pem
    OrganizationalUnitIdentifier: orderer' > ${PWD}/organizations/peerOrganizations/voter.example.com/msp/config.yaml

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca_auditor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca_auditor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca_auditor --id.name voterAdmin --id.secret voterAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  mkdir -p organizations/peerOrganizations/voter.example.com/peers
  mkdir -p organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/msp --csr.hosts peer0.voter.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/voter.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/msp/config.yaml

  echo "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls --enrollment.profile tls --csr.hosts peer0.voter.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/server.key

  mkdir -p ${PWD}/organizations/peerOrganizations/voter.example.com/msp/tlscacerts
  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/voter.example.com/msp/tlscacerts/ca.crt

  mkdir -p ${PWD}/organizations/peerOrganizations/voter.example.com/tlsca
  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/voter.example.com/tlsca/tlsca.voter.example.com-cert.pem

  mkdir -p ${PWD}/organizations/peerOrganizations/voter.example.com/ca
  cp ${PWD}/organizations/peerOrganizations/voter.example.com/peers/peer0.voter.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/voter.example.com/ca/ca.voter.example.com-cert.pem

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/voter.example.com/users/User1@voter.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/voter.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/voter.example.com/users/User1@voter.example.com/msp/config.yaml

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://voterAdmin:voterAdminpw@localhost:7054 --caname ca_auditor -M ${PWD}/organizations/peerOrganizations/voter.example.com/users/Admin@voter.example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/ca_auditor/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/voter.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/voter.example.com/users/Admin@voter.example.com/msp/config.yaml
}

createOrderer
createElectionCommission
createAuditor
createVoter